<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>